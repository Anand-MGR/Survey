@model Survey.Models.EmailTemplateModel

@{
    ViewBag.Title = "EmailTemplate";
    Layout = "~/Views/Shared/_LayoutSurvey.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    #templatename, #editor {
        margin-left: 10%;
        display: block;
        width: 41%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .ck.ck-editor {
        /*  position: absolute !important;*/
        margin-left: 10% !important;
        min-width: 38% !important;
        max-width: 38% !important;
    }

    .ck-editor__main {
        height: 600px !important; /* Adjust the height value as needed */
    }

    .ck-content {
        min-height: 450px;
        max-height: 450px; /* Set your desired maximum height here */
        overflow-y: auto; /* Add scrollbars if content exceeds the maximum height */
    }

    #btnCreateTemplate {
        margin-left: 55% !important;
        background-color: blue;
        color: white;
        border-radius: 6px;
        /* margin-top:4% !important;*/
    }
    #btnCanceltemplate {
        background-color: red;
        color: white;
        border-radius: 6px;
        padding: 7px;
        /* margin-top:4% !important;*/
    }

    .ck.ck-content.ck-editor__editable.ck-rounded-corners.ck-editor__editable_inline.ck-blurred {
        height: 600px !important;
    }

    body {
        overflow: hidden;
    }
</style> 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <script src="~/scripts/texteditor.js"></script>
</head>
<body>
    <h2 style="float: left; color: #3853a8 ;margin-top:1%;">Email Template</h2>
    <button type="button" class="btn btn-primary" style="float: right; margin-top: 1%;" id="backtodashboard" onclick="location.href = '@Url.Action("EmailTemplateDashboard", "ProjectSurvey")';">Back To Dashboard</button>
    <br />
    <br />
    <hr />
    <div class="control-label">Template Name</div>
    <input type="text" id="templatename" value="@Model.TemplateName" />

    <div class="control-label">Body Content</div>
    <div id="editor">
        <p></p>
    </div>

    <div id="Emailtemplatebuttons" style="margin-top:32%;">
        <button id="btnCreateTemplate" onclick="updateOutput()">Create Template</button>
        <button id="btnCanceltemplate" onclick="location.href = '@Url.Action("EmailTemplateDashboard", "ProjectSurvey")';">Cancel</button>
    </div>

    <div id="output"><p>@Model.Body_Content</p></div>
    <script>
        var editor;

        ClassicEditor
            .create(document.querySelector('#editor'))
            .then(createdEditor => {
                editor = createdEditor;

                // Load model value into CKEditor
                const modelBodyContent = '@Html.Raw(Model.Body_Content)';
                editor.setData(modelBodyContent);

            })
            .catch(error => {
                console.error(error);
            });


        function updateOutput() {
            var templateName = document.getElementById('templatename').value;
            var bodyContent = editor.getData();
            if (!templateName || !bodyContent) {
                alert('Template Name and Body Content cannot be null or empty.');
                return false;
            }

            // Make AJAX request to the controller
            $.ajax({
                url: '/Projectsurvey/EmailTemplate',
                type: 'POST',
                data: JSON.stringify({
                    ETM: {
                        TemplateName: templateName,
                        Body_Content: bodyContent
                    }
                }),
                contentType: 'application/json',
                success: function (data) {
                    // Handle success response
                    console.log('Data sent successfully');
                },
                error: function (error) {
                    // Handle error
                    console.error('Error sending data:', error);
                }
            });
        }

    </script>
</body>
</html>
