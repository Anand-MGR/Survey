
<body id="body-pd">
    <header class="header" id="header">
        <div class="header_toggle">
            <i class='bx bx-menu' id="header-toggle"></i>
            @if (Session["RoleName"] != null)
            {
                @Session["RoleName"].ToString()

                if (Session["RoleName"].ToString() != "Admin")
                {
                    <div style="display:none">
                        <label for="colorPicker"></label>
                        <input type="color" id="colorPicker">
                        <div id="colorDisplayBox"></div>
                    </div>

                }
                else
                {
                    <label for="colorPicker"></label>
                    <input type="color" id="colorPicker">
                    <div id="colorDisplayBox"></div>
                }
            }
        </div>



        <div class="feed" style="float:left; margin-left: 5%; margin-top: 1%;">          
            <div style=" float:left;margin-top:5%;">
                @if (Session["FirstName"] != null)
                {
                    @Session["FirstName"].ToString()

                }
            </div>
            <a href="@Url.Action("FeedBack", "FeedBack")" class="nav_link active">
                <span class="nav_name" style=" color: #4723D9; font-size:x-large;">Suggestion</span>
            </a>
        </div>
    </header>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" rel="stylesheet" />
    <style>
        @@import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap");

        :root {
            --header-height: 3rem;
            --nav-width: 68px;
            --first-color: Black;
            --first-color-light: #AFA5D9;
            --white-color: #F7F6FB;
            --body-font: 'Nunito', sans-serif;
            --normal-font-size: 1rem;
            --z-fixed: 100;
        }

        *, ::before, ::after {
            box-sizing: border-box;
        }

        body {
            position: relative;
            margin: var(--header-height) 0 0 0;
            padding: 0 1rem;
            font-family: var(--body-font);
            font-size: var(--normal-font-size);
            transition: .5s;
        }

        a {
            text-decoration: none;
        }

        .header {
            width: 100%;
            height: var(--header-height);
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            background-color: var(--white-color);
            z-index: var(--z-fixed);
            transition: .5s;
        }

        .header_toggle {
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer;
        }

        .header_img {
            width: 35px;
            height: 35px;
            display: flex;
            justify-content: center;
            border-radius: 50%;
            overflow: hidden;
        }

            .header_img img {
                width: 40px;
            }

        .l-navbar {
            position: fixed;
            top: 0;
            left: -30%;
            width: var(--nav-width);
            height: 100vh;
            background-color: var(--first-color);
            padding: .5rem 1rem 0 0;
            transition: .5s;
            z-index: var(--z-fixed);
        }

        .nav {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden;
        }

        .nav_logo, .nav_link {
            display: grid;
            grid-template-columns: max-content max-content;
            align-items: center;
            column-gap: 1rem;
            padding: .5rem 0 .5rem 1.5rem;
        }

        .nav_logo {
            margin-bottom: 2rem;
        }

        .nav_logo-icon {
            font-size: 1.25rem;
            color: var(--white-color);
        }

        .nav_logo-name {
            color: var(--white-color);
            font-weight: 700;
        }

        .nav_link {
            position: relative;
            color: var(--first-color-light);
            margin-bottom: 1.5rem;
            transition: .3s;
        }

            .nav_link:hover {
                color: var(--white-color);
            }

        .nav_icon {
            font-size: 1.25rem;
        }

        .show {
            left: 0;
        }

        .body-pd {
            padding-left: calc(var(--nav-width) + 1rem);
        }

        .active {
            color: var(--white-color);
        }

            .active::before {
                content: '';
                position: absolute;
                left: 0;
                width: 2px;
                height: 32px;
                background-color: var(--white-color);
            }

        .height-100 {
            height: 100vh;
        }


        .nav_link:hover + .nav_name {
            display: block;
        }


        @@media screen and (min-width: 768px) {
            body {
                margin: calc(var(--header-height) + 1rem) 0 0 0;
                padding-left: calc(var(--nav-width) + 1rem);
            }

            .header {
                height: calc(var(--header-height) + 1rem);
                padding: 0 2rem 0 calc(var(--nav-width) + 2rem);
            }

            .header_img {
                width: 40px;
                height: 40px;
            }

                .header_img img {
                    width: 45px;
                }

            .l-navbar {
                left: 0;
                padding: 1rem 1rem 0 0;
            }

            .show {
                width: calc(var(--nav-width) + 156px);
            }

            .body-pd {
                padding-left: calc(var(--nav-width) + 188px);
            }
        }
    </style>
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {

            const showNavbar = (toggleId, navId, bodyId, headerId) => {
                const toggle = document.getElementById(toggleId),
                    nav = document.getElementById(navId),
                    bodypd = document.getElementById(bodyId),
                    headerpd = document.getElementById(headerId)

                // Validate that all variables exist
                if (toggle && nav && bodypd && headerpd) {
                    toggle.addEventListener('click', () => {
                        // show navbar
                        nav.classList.toggle('show')
                        // change icon
                        toggle.classList.toggle('bx-x')
                        // add padding to body
                        bodypd.classList.toggle('body-pd')
                        // add padding to header
                        headerpd.classList.toggle('body-pd')
                    })
                }
            }

            showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header')

            /*===== LINK ACTIVE =====*/
            const linkColor = document.querySelectorAll('.nav_link')

            function colorLink() {
                if (linkColor) {
                    linkColor.forEach(l => l.classList.remove('active'))
                    this.classList.add('active')
                }
            }
            linkColor.forEach(l => l.addEventListener('click', colorLink))

            // Your code to run since DOM is loaded and ready
        });
    </script>

    <script>
        function toggleOptions() {
            var options = document.getElementById('user-options');
            options.style.display = options.style.display === 'none' ? 'block' : 'none';
        }
    </script>

    <style>

        header2 {
            padding: 10px;
            text-align: right;
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer;
        }

        #user-profile {
            position: relative;
            display: inline-block;
            cursor: pointer;
        }

        #user-options {
            display: none;
            position: absolute;
            top: 60px;
            right: 10px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 10px;
            border-radius: 4px;
            font-size: 1rem;
            z-index: 1;
            width: 200px; /* Adjust the width as needed */
        }

            #user-options a {
                display: block;
                color: #333;
                text-decoration: none;
                padding: 10px;
            }

                #user-options a:hover {
                    background-color: #3853a8;
                    color: white;
                }


        #user-profile img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
    </style>
    <div class="l-navbar theme-button" id="nav-bar">
        @{
            var Role = @Session["RoleName"].ToString();
        }

        <nav class="nav ">
            <div>
                @if (Role == "Admin")
                {
                    <a href="@Url.Action("GetCLData", "Questions")" class="nav_logo">
                        @*<img src="~/Images/Survey.jpg" alt="" class="header_img" style="margin-left:-14px" /> <span class="nav_logo-name">Survey</span>*@
                        <img src="~/images/OnlyLogo.jpg" alt="" class="header_img" style="margin-left:-14px" /> <span class="nav_logo-name"><img src="~/images/Logo_provenIT.png" style="width:80px;" /></span>
                    </a>
                    <div class="nav_list">
                        <a href="@Url.Action("GetCLData", "Questions")" class="nav_link">
                            <i class='bx bx-layer nav_logo-icon'></i> <span class="nav_name">Get Survey</span>
                        </a>
                        <a href="@Url.Action("ProjectReport", "ProjectSurvey")" class="nav_link">
                            <i class='bx bx-bar-chart-alt-2 nav_icon'></i> <span class="nav_name">Project Report</span>
                        </a>
                        <a href="@Url.Action("QuestionDashboard", "Questions")" class="nav_link">
                            <i class='bx bx-folder nav_icon'></i> <span class="nav_name">Questionnaire</span>
                        </a>
                        <a href="@Url.Action("QuestionsTypeDashboard", "Questions")" class="nav_link">
                            <i class='bx bx-grid-alt nav_icon'></i> <span class="nav_name">Questionnaire Type</span>
                        </a>
                        <a href="@Url.Action("EmailTemplateDashboard", "ProjectSurvey")" class="nav_link">
                            <i class='bx bx-envelope nav_icon'></i> <span class="nav_name">Mail Dashboard</span>
                        </a>
                        <a href="@Url.Action("EmailTemplateMappingDashboard", "ProjectSurvey")" class="nav_link">
                            <i class='bx bx-mail-send nav_icon'></i> <span class="nav_name">Mail Mapping</span>
                        </a>

                        <a href="@Url.Action("UserRoleDashboard", "User")" class="nav_link">
                            <i class='bx bx-shield nav_icon'></i> <span class="nav_name">Roles</span>
                        </a>
                        <a href="@Url.Action("UserDashboard", "User")" class="nav_link">
                            <i class='bx bx-user nav_icon'></i> <span class="nav_name">Users</span>
                        </a>
                        <a href="@Url.Action("FeedBackdashboard", "FeedBack")" class="nav_link">
                            <i class='bx bx-bookmark nav_icon'></i> <span class="nav_name">Feedback</span>
                        </a>
                        <a href='@Url.Action("Logout", "Login")' class="nav_link"> <i class='bx bx-log-out nav_icon'></i> <span class="nav_name">Log Out</span> </a>
                    </div>
                }
                else
                {
                    <a href="#" class="nav_logo">
                        @*<img src="~/Images/Survey.jpg" alt="" class="header_img" style="margin-left:-14px" /> <span class="nav_logo-name">Survey</span>*@
                        <img src="~/images/OnlyLogo.jpg" alt="" class="header_img" style="margin-left:-14px" /> <span class="nav_logo-name"><img src="~/images/Logo_provenIT.png" style="width:80px;" /></span>

                    </a>

                    <a href="@Url.Action("FeedBackdashboard", "FeedBack")" class="nav_link">
                        <i class='bx bx-bookmark nav_icon'></i> <span class="nav_name">Feedback</span>
                    </a>
                    <a href='@Url.Action("Logout", "Login")' class="nav_link"> <i class='bx bx-log-out nav_icon'></i> <span class="nav_name">Log Out</span> </a>
                }
            </div>
            @*<a href='@Url.Action("Logout", "Login")' class="nav_link"> <i class='bx bx-log-out nav_icon'></i> <span class="nav_name">Log Out</span> </a>*@
        </nav>
    </div>
    <!--Container Main start-->
    <div>
        @RenderBody()

    </div>

    <!--Container Main end-->
    <div class="footer">

    </div>
</body>


<style>

    @@media (max-width: 767px) {
        .feed {
            display: none; 
        }

        .header_toggle {
            font-size: 18px !important;
        }

        .nav_link:hover + .nav_name {
            display: block;
        }
    }
</style>

<style>

    #colorPicker {
        margin-right: 10px;
        width: 25px;
        height: 25px;
    }  
    #colorDisplay {
        width: 50px;
        height: 50px;
        border: 1px solid #000;
    }

    .theme-button {
    }

    .text-theme-color {
    }
</style>




<script type="text/javascript">
    const colorPicker = document.getElementById('colorPicker');
    const colorDisplayBox = document.getElementById('colorDisplayBox');

    function setDefaultColor() {
        const defaultColor = localStorage.getItem('selectedColor');

        if (defaultColor) {
            colorPicker.value = defaultColor;
            updateColorDisplay(defaultColor);
            applyColorToButtons(defaultColor);
        }
    }

    function updateColorDisplay(color) {
        colorDisplayBox.style.backgroundColor = color;
    }

    function applyColorToButtons(color) {
        const buttons = document.querySelectorAll('.theme-button');
        buttons.forEach(button => {
            button.style.backgroundColor = color;
        });

        const buttons2 = document.querySelectorAll('.theme-button2');
        buttons2.forEach(button2 => {
            button2.style.border = `4px solid ${color}`;
        });

    }

    colorPicker.addEventListener('input', (event) => {
        const selectedColor = event.target.value;
        updateColorDisplay(selectedColor);
        applyColorToButtons(selectedColor);

        localStorage.setItem('selectedColor', selectedColor);
    });

    setDefaultColor();
</script>
